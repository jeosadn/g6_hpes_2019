==6840== Memcheck, a memory error detector
==6840== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6840== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==6840== Command: ./case2
==6840== 
==6840== Conditional jump or move depends on uninitialised value(s)
==6840==    at 0x4E988DA: vfprintf (vfprintf.c:1642)
==6840==    by 0x4EA0F25: printf (printf.c:33)
==6840==    by 0x10875B: main (case2.c:11)
==6840== 
==6840== Use of uninitialised value of size 8
==6840==    at 0x4E9486B: _itoa_word (_itoa.c:179)
==6840==    by 0x4E97F0D: vfprintf (vfprintf.c:1642)
==6840==    by 0x4EA0F25: printf (printf.c:33)
==6840==    by 0x10875B: main (case2.c:11)
==6840== 
==6840== Conditional jump or move depends on uninitialised value(s)
==6840==    at 0x4E94875: _itoa_word (_itoa.c:179)
==6840==    by 0x4E97F0D: vfprintf (vfprintf.c:1642)
==6840==    by 0x4EA0F25: printf (printf.c:33)
==6840==    by 0x10875B: main (case2.c:11)
==6840== 
==6840== Conditional jump or move depends on uninitialised value(s)
==6840==    at 0x4E98014: vfprintf (vfprintf.c:1642)
==6840==    by 0x4EA0F25: printf (printf.c:33)
==6840==    by 0x10875B: main (case2.c:11)
==6840== 
==6840== Conditional jump or move depends on uninitialised value(s)
==6840==    at 0x4E98B4C: vfprintf (vfprintf.c:1642)
==6840==    by 0x4EA0F25: printf (printf.c:33)
==6840==    by 0x10875B: main (case2.c:11)
==6840== 
0 1 2 3 4 5 6 7 8 31 
==6840== 
==6840== HEAP SUMMARY:
==6840==     in use at exit: 0 bytes in 0 blocks
==6840==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==6840== 
==6840== All heap blocks were freed -- no leaks are possible
==6840== 
==6840== For counts of detected and suppressed errors, rerun with: -v
==6840== Use --track-origins=yes to see where uninitialised values come from
==6840== ERROR SUMMARY: 7 errors from 5 contexts (suppressed: 0 from 0)
